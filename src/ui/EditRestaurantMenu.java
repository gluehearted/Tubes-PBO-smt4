/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import db.DatabaseConnection;
import java.awt.CardLayout;
import javax.swing.JPanel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/**
 *
 * @author Gabriel Prakosa A
 */
public class EditRestaurantMenu extends javax.swing.JPanel {
    private JPanel mainPanel;
    private CardLayout cardLayout;

    public EditRestaurantMenu(JPanel mainPanel, CardLayout cardLayout) {
        this.mainPanel = mainPanel;
        this.cardLayout = cardLayout;
        initComponents();
        loadRestaurants();
        jComboBox1.addActionListener(e -> loadMenuItems());
    }
    
    private void loadRestaurants() {
        jComboBox1.removeAllItems();
        try (Connection conn = DatabaseConnection.getConnection()) {
            String sql = "SELECT name FROM Restaurant";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                jComboBox1.addItem(rs.getString("name"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void loadMenuItems() {
        String selectedRestaurant = (String) jComboBox1.getSelectedItem();
        if (selectedRestaurant == null) return;

        DefaultListModel<String> listModel = new DefaultListModel<>();
        try (Connection conn = DatabaseConnection.getConnection()) {
            String sql = "SELECT m.name FROM MenuItem m JOIN Restaurant r ON m.restaurant_id = r.id WHERE r.name = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, selectedRestaurant);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                listModel.addElement(rs.getString("name"));
            }
            jList1.setModel(listModel);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        jLabel1.setText("PILIH RESTAURANT");

        jButton1.setText("Tambah Restaurant dan Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("PILIH MENU");

        jScrollPane1.setViewportView(jList1);

        jButton2.setText("Hapus Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setText("Hapus Restaurant");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)))
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String restoName = JOptionPane.showInputDialog(this, "Nama restoran:");
        if (restoName == null || restoName.trim().isEmpty()) return;

        String menuName = JOptionPane.showInputDialog(this, "Nama menu:");
        if (menuName == null || menuName.trim().isEmpty()) return;

        String priceStr = JOptionPane.showInputDialog(this, "Harga menu:");
        double price = 0;
        try {
            price = Double.parseDouble(priceStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Harga tidak valid.");
            return;
        }

        try (Connection conn = DatabaseConnection.getConnection()) {
            // Insert restaurant
            String sqlResto = "INSERT INTO Restaurant (name) VALUES (?)";
            PreparedStatement pstResto = conn.prepareStatement(sqlResto, PreparedStatement.RETURN_GENERATED_KEYS);
            pstResto.setString(1, restoName);
            pstResto.executeUpdate();
            ResultSet rs = pstResto.getGeneratedKeys();
            int restaurantId = -1;
            if (rs.next()) {
                restaurantId = rs.getInt(1);
            }

            // Insert menu item
            if (restaurantId != -1) {
                String sqlMenu = "INSERT INTO MenuItem (name, price, restaurant_id) VALUES (?, ?, ?)";
                PreparedStatement pstMenu = conn.prepareStatement(sqlMenu);
                pstMenu.setString(1, menuName);
                pstMenu.setDouble(2, price);
                pstMenu.setInt(3, restaurantId);
                pstMenu.executeUpdate();

                JOptionPane.showMessageDialog(this, "Restoran dan menu berhasil ditambahkan!");
                loadRestaurants(); // Refresh
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menambahkan.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String selectedMenu = jList1.getSelectedValue();
        String selectedResto = (String) jComboBox1.getSelectedItem();
        if (selectedMenu == null || selectedResto == null) return;

        try (Connection conn = DatabaseConnection.getConnection()) {
            String sql = "DELETE FROM MenuItem WHERE id IN (SELECT m.id FROM MenuItem m JOIN Restaurant r ON m.restaurant_id = r.id WHERE m.name = ? AND r.name = ?)";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, selectedMenu);
            pst.setString(2, selectedResto);
            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Menu berhasil dihapus!");
                loadMenuItems();
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menghapus menu.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
